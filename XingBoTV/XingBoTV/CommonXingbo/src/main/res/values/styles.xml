<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
    </style>

    <!--对话框样式-->
    <style name="PXDialog" parent="android:style/Theme.Dialog">
        <!-- 背景颜色-->
        <item name="android:windowBackground">@android:color/transparent</item>
        <!-- 无边框 -->
        <item name="android:windowFrame">@null</item>
        <!-- 没有标题 -->
        <item name="android:windowNoTitle">true</item>
        <!-- 背景是否半透明 -->
        <item name="android:windowIsTranslucent">true</item>
    </style>

    <!--警告提示框样式-->
    <style name="PXAlert" parent="PXDialog">
        <!-- 背景颜色透明-->
        <item name="android:windowBackground">@color/translucent_background</item>
        <!-- 背景是否半透明 -->
        <item name="android:windowIsTranslucent">false</item>
        <!--背景模糊
        <item name="android:backgroundDimEnabled">false</item>
        -->
    </style>

    <!--进度对话框样式-->
    <style name="loading" parent="PXDialog">
        <!-- 背景颜色透明-->
        <item name="android:windowBackground">@color/translucent_background</item>
        <!-- 背景是否半透明 -->
        <item name="android:windowIsTranslucent">false</item>
        <!--背景模糊-->
        <item name="android:backgroundDimEnabled">false</item>
    </style>

    <!--PagerSlidingTabStrip分页导航菜单栏属性配置-->
    <declare-styleable name="PagerSlidingTabStrip">
        <attr name="pstsIndicatorColor" format="color" />
        <attr name="pstsUnderlineColor" format="color" />
        <attr name="pstsDividerColor" format="color" />
        <attr name="pstsIndicatorHeight" format="dimension" />
        <attr name="pstsIndicatorPadding" format="dimension" />
        <attr name="pstsUnderlineHeight" format="dimension" />
        <attr name="pstsDividerPadding" format="dimension" />
        <attr name="pstsMinTabWidth" format="dimension" />
        <attr name="pstsTabPaddingLeftRight" format="dimension" />
        <attr name="pstsScrollOffset" format="dimension" />
        <attr name="pstsTabBackground" format="reference" />
        <attr name="pstsShouldExpand" format="boolean" />
        <attr name="pstsTextAllCaps" format="boolean" />
        <attr name="selectedTabTextColor" format="color"/>
    </declare-styleable>

    <!--带图标文字button-->
    <declare-styleable name="ImageTextButton">
        <attr name="iconId" format="reference" />
        <attr name="text" format="string"/>
        <attr name="textColor" format="color"/>
        <attr name="iconSize" format="dimension"/>
        <attr name="iMarginTop" format="dimension"/>
        <attr name="iMarginBottom" format="dimension"/>
        <attr name="iDivider" format="dimension"/>
    </declare-styleable>

    <!--图片剪切视图属性-->
    <declare-styleable name="ImageCropView">
        <attr name="gridInnerStroke" format="dimension" />
        <attr name="gridInnerColor" format="color" />
        <attr name="setInnerGridMode" format="integer">
            <enum name="off" value="0"/>
            <enum name="on" value="1"/>
        </attr>

        <attr name="gridOuterStroke" format="dimension" />
        <attr name="gridOuterColor" format="color" />
        <attr name="setOuterGridMode" format="integer">
            <enum name="off" value="0"/>
            <enum name="on" value="1"/>
        </attr>
    </declare-styleable>


    <!--PullToRefresh下拉刷新控件配置-->

    <item type="id" name="gridview" />
    <item type="id" name="webview" />
    <item type="id" name="scrollview" />

    <declare-styleable name="PullToRefresh">

        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>

    <!--左右滑动圆点指示器配置-->

    <attr name="centered" format="boolean" />
    <attr name="selectedColor" format="color" />
    <attr name="strokeWidth" format="dimension" />
    <attr name="unselectedColor" format="color" />

    <bool name="default_circle_indicator_centered">true</bool>
    <color name="default_circle_indicator_fill_color">#FFFFFFFF</color>
    <color name="default_circle_indicator_page_color">#00000000</color>
    <integer name="default_circle_indicator_orientation">0</integer>
    <dimen name="default_circle_indicator_radius">3dp</dimen>
    <bool name="default_circle_indicator_snap">false</bool>
    <color name="default_circle_indicator_stroke_color">#FFDDDDDD</color>
    <dimen name="default_circle_indicator_stroke_width">1dp</dimen>


    <!--左右滑动圆点指示器属性配置-->
    <declare-styleable name="ViewPagerIndicator">
        <!-- Style of the circle indicator. -->
        <attr name="vpiCirclePageIndicatorStyle" format="reference"/>
    </declare-styleable>

    <declare-styleable name="CirclePageIndicator">
        <!-- Whether or not the indicators should be centered. -->
        <attr name="centered" />
        <!-- Color of the filled circle that represents the current page. -->
        <attr name="fillColor" format="color" />
        <!-- Color of the filled circles that represents pages. -->
        <attr name="pageColor" format="color" />
        <!-- Orientation of the indicator. -->
        <attr name="android:orientation"/>
        <!-- Radius of the circles. This is also the spacing between circles. -->
        <attr name="radius" format="dimension" />
        <!-- Whether or not the selected indicator snaps to the circles. -->
        <attr name="snap" format="boolean" />
        <!-- Color of the open circles. -->
        <attr name="strokeColor" format="color" />
        <!-- Width of the stroke used to draw the circles. -->
        <attr name="strokeWidth" />
        <!-- View background -->
        <attr name="android:background"/>
    </declare-styleable>

    <style name="StyledIndicators" parent="@android:style/Theme.Light">
        <item name="vpiCirclePageIndicatorStyle">@style/CustomCirclePageIndicator</item>
    </style>

    <style name="CustomCirclePageIndicator">
        <item name="fillColor">#FF888888</item>
        <item name="strokeColor">#FF000000</item>
        <item name="strokeWidth">2dp</item>
        <item name="radius">10dp</item>
        <item name="centered">true</item>
    </style>

    <!--SwitchButton设置处开按钮属性-->
    <declare-styleable name="SwitchButton">
        <attr name="kswOnDrawable" format="reference"/>
        <attr name="kswOffDrawable" format="reference"/>
        <attr name="kswThumbDrawable" format="reference"/>
        <attr name="kswThumb_margin" format="dimension|reference"/>
        <attr name="kswThumb_marginTop" format="dimension|reference"/>
        <attr name="kswThumb_marginBottom" format="dimension|reference"/>
        <attr name="kswThumb_marginLeft" format="dimension|reference"/>
        <attr name="kswThumb_marginRight" format="dimension|reference"/>
        <attr name="kswThumb_width" format="dimension|reference"/>
        <attr name="kswThumb_height" format="dimension|reference"/>
        <attr name="kswOnColor" format="color|reference"/>
        <attr name="kswOffColor" format="color|reference"/>
        <attr name="kswThumbColor" format="color|reference"/>
        <attr name="kswThumbPressedColor" format="color|reference"/>
        <attr name="kswAnimationVelocity" format="integer"/>
        <attr name="kswRadius" format="integer"/>
        <attr name="kswMeasureFactor" format="float"/>
        <attr name="kswInsetLeft" format="dimension|reference"/>
        <attr name="kswInsetRight" format="dimension|reference"/>
        <attr name="kswInsetTop" format="dimension|reference"/>
        <attr name="kswInsetBottom" format="dimension|reference"/>
    </declare-styleable>

    <!--StickyListHeaders头部联动分类listView属性配置-->
    <declare-styleable name="StickyListHeadersListView">
        <attr name="stickyListHeadersListViewStyle" format="reference"/>

        <!-- View attributes -->
        <attr name="android:clipToPadding" />
        <attr name="android:scrollbars" />
        <attr name="android:overScrollMode" />
        <attr name="android:padding" />
        <attr name="android:paddingLeft" />
        <attr name="android:paddingTop" />
        <attr name="android:paddingRight" />
        <attr name="android:paddingBottom" />

        <!-- ListView attributes -->
        <attr name="android:fadingEdgeLength" />
        <attr name="android:requiresFadingEdge" />
        <attr name="android:cacheColorHint" />
        <attr name="android:choiceMode" />
        <attr name="android:drawSelectorOnTop" />
        <attr name="android:fastScrollEnabled" />
        <attr name="android:fastScrollAlwaysVisible" />
        <attr name="android:listSelector" />
        <attr name="android:scrollingCache" />
        <attr name="android:scrollbarStyle" />
        <attr name="android:divider" />
        <attr name="android:dividerHeight" />
        <attr name="android:transcriptMode" />
        <attr name="android:stackFromBottom" />

        <!-- StickyListHeaders attributes -->
        <attr name="hasStickyHeaders" format="boolean" />
        <attr name="isDrawingListUnderStickyHeader" format="boolean" />
    </declare-styleable>


</resources>
